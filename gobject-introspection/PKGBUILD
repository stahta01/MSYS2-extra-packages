# Contributor: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=gobject-introspection
pkgbase=${_realname}
pkgname=("${_realname}"
         "${_realname}-runtime")
pkgver=1.84.0
pkgrel=1
arch=('i686' 'x86_64')
url="https://gi.readthedocs.io/"
msys2_repository_url="https://gitlab.gnome.org/GNOME/gobject-introspection"
license=("spdx:LGPL-2.0-only")
makedepends=('gcc'
             'glib2-devel'
             'libiconv-devel'
             'libffi-devel'
             'meson'
             'pkgconf'
             'python'
             'python-mako'
             'python-markdown'
             'python-setuptools')
source=(https://download.gnome.org/sources/gobject-introspection/${pkgver%.*}/${_realname}-${pkgver}.tar.xz
        0001-Skip-building-giscanner.patch
        0002-relocate-tools.patch
        0022-change-pkg-config-invocations.mingw.patch
        0024-Support-passing-arguments-to-g-ir-scanner-through-a-.all.patch
        0026-giscanner-assertions-and-waits.patch
        pyscript2exe.py)

sha256sums=('945b57da7ec262e5c266b89e091d14be800cc424277d82a02872b7d794a84779'
            '4f83b5a34841b45e91791427b3df9fc8a41f265a9d2ac7d408a804d113bc7d90'
            '26152a13e391a5cf49968c1b852c81f4979c8ad7c2c21a9dfd0febc9135bbbda'
            '89224a8bae7256c68dbac5007717b622f39bd5b3a0db2b96ff07d9a17572e169'
            '594a067618922f10bdc5034f290f49d36944df3b970c9604381e2b9058a648da'
            '5b13c3571ef9ccceb96b4add46f907a1f099d3da5819e8cc5fbf5e8aab5f5da3'
            'e57174517b08cf8f9fb4f43a381d342d23d2db3cad661107f35ca21c39b5734d')

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}

  patch -p1 -i "${srcdir}"/0001-Skip-building-giscanner.patch
  patch -p1 -i "${srcdir}"/0002-relocate-tools.patch
  patch -p1 -i "${srcdir}"/0022-change-pkg-config-invocations.mingw.patch
  patch -p1 -i "${srcdir}"/0024-Support-passing-arguments-to-g-ir-scanner-through-a-.all.patch
  #patch -p1 -i "${srcdir}"/0026-giscanner-assertions-and-waits.patch
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  MSYS2_ARG_CONV_EXCL="--prefix=" \
  ${MSYSTEM_PREFIX}/bin/meson setup \
    --prefix="${MSYSTEM_PREFIX}" \
    --buildtype=plain \
    -Ddoctool=enabled \
    -Dcairo=disabled \
    -Ddoctool=disabled \
    -Dtests=false \
    -Dbuild_introspection_data=false \
    "../${_realname}-${pkgver}"

  GI_SCANNER_DISABLE_CACHE=1 ${MSYSTEM_PREFIX}/bin/meson compile
}

package_gobject-introspection() {
  pkgdesc="Introspection system for GObject-based libraries"
  depends=("gobject-introspection-runtime=${pkgver}"
           "gettext"
           "glib2"
           "libffi"
           "python"
           "python-mako"
           "python-markdown"
           "python-setuptools")
  options=('!emptydirs')

  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" ${MSYSTEM_PREFIX}/bin/meson install

  #local _PRE_WIN="$(cygpath -m ${MSYSTEM_PREFIX})"
  #for name in g-ir-scanner g-ir-doc-tool g-ir-annotation-tool; do
    #${MSYSTEM_PREFIX}/bin/python3 \
      #"${srcdir}/pyscript2exe.py" "${pkgdir}${MSYSTEM_PREFIX}/bin/${name}"
  #done

  for pcfile in  "${pkgdir}${MSYSTEM_PREFIX}"/lib/pkgconfig/*.pc; do
    sed -s "s|${_PRE_WIN}/lib/libffi|\${prefix}/lib/libffi|g" -i "${pcfile}"
    # we create an .exe launcher for g-ir-scanner, so adjust here too
    sed -s "s|/g-ir-scanner|/g-ir-scanner.exe|g" -i "${pcfile}"
  done

  #rm "${pkgdir}${MSYSTEM_PREFIX}/bin/libgirepository"*.dll
  rm "${pkgdir}${MSYSTEM_PREFIX}/lib/libgirepository"*.a
  #rm -R "${pkgdir}${MSYSTEM_PREFIX}/lib/girepository-1.0"

  MSYS2_ARG_CONV_EXCL="-p" \
    python -m compileall -o 0 -o 1 -q -s"${pkgdir}" -p"/" "${pkgdir}${MSYSTEM_PREFIX}/lib"
}

package_gobject-introspection-runtime() {
  pkgdesc="Introspection system for GObject-based libraries - runtime files"
  depends=('glib2'
           'libffi')

  cd "${srcdir}/build-${MSYSTEM}"
  local tmp_install="$(pwd)/_temp"

  DESTDIR="${tmp_install}" meson install

  #install -Dt "${pkgdir}${MSYSTEM_PREFIX}/bin" "${tmp_install}${MSYSTEM_PREFIX}/bin/libgirepository"*.dll
  install -Dt "${pkgdir}${MSYSTEM_PREFIX}/lib" "${tmp_install}${MSYSTEM_PREFIX}/lib/libgirepository"*.a
  #install -Dt "${pkgdir}${MSYSTEM_PREFIX}/lib/girepository-1.0" "${tmp_install}${MSYSTEM_PREFIX}/lib/girepository-1.0/"*.typelib
}

# template start; name=splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
